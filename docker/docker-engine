#! /usr/bin/env bash

# remove all unused volumes
docker volume prune

# list volumes
docker volume ls

# connect to a psql inside running dockerized postgresql db
docker exec -it $container_name psql -U $username $db_name

# list all port bindings for a docker container
docker inspect --format='{{range $p, $conf := .NetworkSettings.Ports}}  \
{{$p}} -> {{(index $conf 0).HostPort}} {{end}}' $container_name

# push an image
docker image push $image_name

# disable autostart of a container
docker update --restart=no $container_name

# list tags for an image on remote registry
curl --user "user:pass" ${docker_registry_url_for_image}/tags/list

# list containers by regex
docker ps -a | awk '{print $NF}' | grep -w $search_term

# start the grepped containers
docker start $(docker ps -a | awk '{print $NF}' | grep -w $search_term)

# copy file from container to host
docker cp $container_name:/usr/share/app/conf/file /tmp

# get container logs
docker logs --follow --tail 1000 $container_name

# stop all running containers
docker stop $(docker ps -q)

# docker compose rebuild all services on start (in detached mode)
docker-compose up -d --build --force-recreate